plugins {
    id 'java'
	id 'maven-publish'
}

apply plugin: 'eclipse'

group="org.asf.cyan"
def authorname="AerialWorks Software Foundation"

version="1.0.0.A33"
jar.dependsOn('processResources')

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	
	inputs.property "version", project.version
	
	from(sourceSets.main.resources.srcDirs) {
		expand "version": project.version
	}
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.reflections:reflections:0.9.12'
	implementation 'org.ow2.asm:asm:9.4'
	implementation 'org.ow2.asm:asm-tree:9.4'
	implementation 'org.ow2.asm:asm-commons:9.4'
	
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
    
    testImplementation 'junit:junit:4.12'
}

sourceCompatibility = '1.11'
targetCompatibility = '1.11'

jar {
	manifest {
		attributes([
			"Specification-Title": project.name,
			"Specification-Vendor": "${authorname}",
			"Specification-Version": project.version,
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
			"Implementation-Vendor" :"${authorname}",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
			"Agent-Class": "org.asf.cyan.fluid.FluidAgent",
			"Premain-Class": "org.asf.cyan.fluid.FluidAgent"
		])
	}
	exclude "**/extra/**"
	exclude "**/tests/**"
	includeEmptyDirs = false
}

task javaDocs(type: Javadoc) {
	classpath = sourceSets.main.runtimeClasspath
	source = sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: 'javaDocs') {
	from javadoc
	classifier = 'javadoc'
	exclude "**/extra/**"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
	exclude "**/extra/**"
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

test {
    include "**/**Test**"
    exclude "**/**SpecialTest**"
    minHeapSize = "128m"
  	maxHeapSize = "2G"
}

task specialTest (type: Test, dependsOn: test) {
    include "**/**SpecialTest**"
    minHeapSize = "128m"
  	maxHeapSize = "2G"
}
